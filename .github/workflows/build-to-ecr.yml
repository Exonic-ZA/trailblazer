name: Build and push multi-platform Docker images to Elastic Container Registry

env:
  CONTAINER_REGISTRY_URL: ${{ secrets.CONTAINER_REGISTRY_URL }}
  BUILDS_URL: ${{ secrets.BUILDS_URL }}

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Trailblazer version to tag the container image'
        required: true
        default: '6.6.1'

defaults:
  run:
    shell: bash

jobs:
  docker-build-push:
    name: Build and push multi-platform image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.ECR_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.ECR_SECRET_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Derive environment from branch name
        run: |
          BRANCH_NAME=${{ github.ref_name }}
          if [[ "$BRANCH_NAME" == "main" || "$BRANCH_NAME" == "master" ]]; then
            ENVIRONMENT="prod"
            TAGS="${{ env.CONTAINER_REGISTRY_URL }}:${{ github.event.inputs.version }},${{ env.CONTAINER_REGISTRY_URL }}:latest,${{ env.CONTAINER_REGISTRY_URL }}:latest-prod"
          elif [[ "$BRANCH_NAME" == "develop" ]]; then
            ENVIRONMENT="develop"
            TAGS="${{ env.CONTAINER_REGISTRY_URL }}:${{ github.event.inputs.version }}-develop,${{ env.CONTAINER_REGISTRY_URL }}:latest-develop"
          elif [[ "$BRANCH_NAME" == "staging" ]]; then
            ENVIRONMENT="staging"
            TAGS="${{ env.CONTAINER_REGISTRY_URL }}:${{ github.event.inputs.version }}-staging,${{ env.CONTAINER_REGISTRY_URL }}:latest-staging"
          else
            echo "Unknown branch name: $BRANCH_NAME" && exit 1
          fi
          echo "ENVIRONMENT=$ENVIRONMENT" >> $GITHUB_ENV
          echo "TAGS=$TAGS" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: containerisation
          file: containerisation/Dockerfile
          tags: ${{ env.TAGS }}
          build-args: |
            TRAILBLAZER_VERSION=${{ github.event.inputs.version }}
            BUILDS_URL=${{ secrets.BUILDS_URL }}
            ENVIRONMENT=${{ env.ENVIRONMENT }}
          platforms: linux/amd64,linux/arm64
          push: true
